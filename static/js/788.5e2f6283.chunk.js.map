{"version":3,"file":"static/js/788.5e2f6283.chunk.js","mappings":"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","sources":["webpack://samurai-way/./src/components/Content/Users/Users.module.css?df65","webpack://samurai-way/./src/components/Content/Users/User/User.module.css?05de","components/Content/Users/User/User.tsx","webpack://samurai-way/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.tsx","components/Content/Users/Users.tsx","components/Content/Users/UsersAPI.tsx","components/Content/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"currentPage\":\"Users_currentPage__fMUGW\"};","// extracted by mini-css-extract-plugin\nexport default {\"user_wrapper\":\"User_user_wrapper__ABgas\",\"user_ava_block\":\"User_user_ava_block__A5v-i\",\"user_description_block\":\"User_user_description_block__yYjEH\",\"button_follow_unfollow\":\"User_button_follow_unfollow__o4ry7\",\"user_name\":\"User_user_name__AmBHV\",\"user_location\":\"User_user_location__HsXOV\",\"user_last_data\":\"User_user_last_data__7RZUR\",\"dialog_description\":\"User_dialog_description__uooYx\"};","import React from 'react';\r\nimport styles from './User.module.css'\r\nimport {Button} from '../../../common/Button/Button';\r\nimport {UserType} from '../../../../redux/redux-store';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nexport type PropsType = UserType & {\r\n    id:number\r\n    followed:boolean\r\n    followUser: (userID: number) => void\r\n    unfollowUser: (userID: number) => void\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    name:string\r\n    photos:string\r\n    wasOnline:string|undefined\r\n}\r\n\r\nexport const User = ({\r\n                            id,\r\n                         followUser,\r\n                         unfollowUser,\r\n                         followingInProgress,\r\n                         followed,\r\n                         name,\r\n                         photos,\r\n                         wasOnline\r\n}: PropsType) => {\r\n\r\n    const followHandler = () => {\r\n        followUser(id)\r\n    }\r\n    const unfollowHandler = () => {\r\n        unfollowUser(id)\r\n    }\r\n    const finalCallback = followed ? unfollowHandler : followHandler;\r\n    const finalTitle = followed ? 'Unfollow' : 'Follow';\r\n    const disabledButton = followingInProgress.some(id => id === id)\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <div className={styles.user_wrapper}>\r\n                    <div className={styles.user_ava_block}>\r\n                        <NavLink to={'/profile/' + String(id)}> <img src={photos}/></NavLink>\r\n                        <Button disabled={disabledButton} title={finalTitle} callback={finalCallback}\r\n                                className={styles.button_follow_unfollow}/>\r\n                    </div>\r\n                    <div className={styles.user_description_block}>\r\n                        <div className={styles.user_name}>\r\n                            {name}\r\n                        </div>\r\n                        <div className={styles.user_location}>\r\n                            {`${'city'}, ${'country'}`}\r\n                        </div>\r\n                        <div className={styles.user_last_data}>\r\n                            {wasOnline ? wasOnline : '22:59'}\r\n                        </div>\r\n                        <div className={styles.user_description}>\r\n                            <p>\r\n                                {'props.userStatus'}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"mainWrapper\":\"Paginator_mainWrapper__gAex0\",\"paginatorWrapper\":\"Paginator_paginatorWrapper__1tFl-\"};","import React, {useState} from 'react';\r\nimport {Button} from '../Button/Button';\r\nimport styles from './Paginator.module.css';\r\nimport pageStyles from '../../Content/Users/Users.module.css'\r\n\r\ntype PaginatorPropsType = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onCurrentPageHandler: (currentPage: number, portionNumber: number) => void\r\n    portionSize: number\r\n    portion: number\r\n}\r\nexport const Paginator: React.FC<PaginatorPropsType> = ({\r\n                                                            totalCount,\r\n                                                            currentPage,\r\n                                                            pageSize,\r\n                                                            onCurrentPageHandler,\r\n                                                            portionSize,\r\n                                                            portion\r\n                                                        }) => {\r\n\r\n    let pagesCount = Math.ceil(totalCount / pageSize);\r\n    let pages = [];\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(portion);\r\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    const rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (<div className={styles.mainWrapper}>\r\n            <div className={styles.paginatorWrapper}>\r\n                {portionNumber > 1\r\n                    ? <div>\r\n                        <Button title={'<<'} callback={() => {\r\n                            setPortionNumber(1)\r\n                        }}/>\r\n                        <Button title={'<<<'} callback={() => {\r\n                            setPortionNumber(portionNumber - 1)\r\n                        }}/>\r\n                    </div>\r\n\r\n                    : <div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                }\r\n                <div className={styles.paginatorWrap}>\r\n                    {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                        .map(p => <Button className={p === currentPage ? pageStyles.currentPage : ''}\r\n                                          title={p.toString()}\r\n                                          callback={() => onCurrentPageHandler(p, portionNumber)}/>)}\r\n                </div>\r\n                {portionCount > portionNumber\r\n                    ? <div>\r\n                        <Button title={'>>>'} callback={() => {\r\n                            setPortionNumber(portionNumber + 1)\r\n                        }}/>\r\n                        <Button title={'>>'} callback={() => {\r\n                            setPortionNumber(portionCount)\r\n                        }}/>\r\n                    </div>\r\n                    : <div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport {User} from './User/User';\r\nimport {UserType} from '../../../redux/redux-store';\r\nimport userDefaulAva from './../../../asets/usersInitialAva.jpg';\r\nimport {Paginator} from '../../common/Paginator/Paginator';\r\n\r\nexport type PropsType = {\r\n    users: Array<UserType>\r\n    followUser: (userID: number) => void\r\n    unfollowUser: (userID: number) => void\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onCurrentPageHandler: (page: number,portionNumber:number) => void\r\n    isFetching: boolean\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    followingInProgress: Array<number>\r\n    toggleIsFollowingProgress: (userID: number, isFetching: boolean) => void\r\n    portion:number\r\n}\r\n\r\nexport const Users: React.FC<PropsType> = ({\r\n                                               users,\r\n                                               followUser,\r\n                                               unfollowUser,\r\n                                               totalCount,\r\n                                               pageSize,\r\n                                               currentPage,\r\n                                               onCurrentPageHandler,\r\n                                               isFetching,\r\n                                               followingInProgress,\r\n                                               portion,\r\n                                               ...restProps\r\n}) => {\r\n\r\n    let mappedUsers = users.map(u => <User key={u.id} id={u.id} name={u.name + u.id}\r\n                                           userStatus={u.userStatus} followed={u.followed}\r\n                                           location={u.location}\r\n                                           photos={u.photos.small ? u.photos.small : userDefaulAva}\r\n                                           wasOnline={u.wasOnline}\r\n                                           followUser={() => followUser(u.id)}\r\n                                           unfollowUser={() => unfollowUser(u.id)}\r\n                                           isFetching={isFetching}\r\n                                           followingInProgress={followingInProgress}\r\n\r\n    />)\r\n    return (\r\n\r\n        <>\r\n            <div className={styles.users_wrapper}>\r\n                <Paginator totalCount={totalCount}\r\n                           pageSize={pageSize}\r\n                           currentPage={currentPage}\r\n                           onCurrentPageHandler={onCurrentPageHandler}\r\n                           portionSize={10}\r\n                           portion={portion}\r\n                />\r\n                {mappedUsers.length > 0\r\n                    ? mappedUsers\r\n                    : 'There are currently no users...'\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {UserType} from '../../../redux/redux-store';\r\nimport {Users} from './Users';\r\nimport {Preloader} from '../../common/Preloader/Preloader';\r\n\r\n\r\nexport type PropsType = {\r\n    users: Array<UserType>\r\n    followUser: (userID: number) => void\r\n    unfollowUser: (userID: number) => void\r\n    setUsers: (users: Array<UserType>) => void\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    setTotalCount: (totalCount: number) => void\r\n    setCurrentPage:(page: number,portionNumber:number) => void\r\n    isFetching: boolean\r\n    toggleIsFetching: (isFetching: boolean) => void\r\n    followingInProgress: Array<number>\r\n    toggleIsFollowingProgress: (userID: number, isFetching: boolean) => void\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    portion:number\r\n}\r\n\r\nexport class UsersAPI extends React.Component<PropsType, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.requestUsers(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        const onCurrentPageHandler = (page: number, portionNumber:number) => {\r\n            this.props.setCurrentPage(page, portionNumber)\r\n            this.props.requestUsers(page, this.props.pageSize);\r\n        }\r\n\r\n\r\n        return (\r\n            <>{this.props.isFetching\r\n                ? <Preloader/>\r\n                : <Users\r\n                    users={this.props.users}\r\n                    followUser={this.props.followUser}\r\n                    unfollowUser={this.props.unfollowUser}\r\n                    totalCount={this.props.totalCount}\r\n                    pageSize={this.props.pageSize}\r\n                    currentPage={this.props.currentPage}\r\n                    onCurrentPageHandler={onCurrentPageHandler}\r\n                    isFetching={this.props.isFetching}\r\n                    toggleIsFetching={this.props.toggleIsFetching}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    toggleIsFollowingProgress={this.props.toggleIsFollowingProgress}\r\n                    portion={this.props.portion}\r\n                />\r\n            }\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, {ComponentType} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {StateType, UserType} from '../../../redux/redux-store';\r\nimport {UsersAPI} from './UsersAPI';\r\nimport {\r\n    followUser, requestUsers,\r\n    setCurrentPage,\r\n    setTotalCount,\r\n    setUsers,\r\n    toggleIsFetching, toggleIsFollowingProgress,\r\n    unfollowUser\r\n} from '../../../redux/usersReducer';\r\nimport {wIthAuthRedirect} from '../../HOK/WIthAuthRedirect';\r\nimport {compose} from 'redux';\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    users: Array<UserType>\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n    portion:number\r\n}\r\n\r\nconst mapStateToProps = (state: StateType): MapStateToPropsType => {\r\n    debugger\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress,\r\n        portion:state.usersPage.portion\r\n    }\r\n}\r\n\r\nconst UsersContainer = compose<ComponentType>(\r\n    (connect(mapStateToProps, {\r\n        followUser, unfollowUser, setUsers, setTotalCount,\r\n        setCurrentPage, toggleIsFetching, toggleIsFollowingProgress,\r\n        requestUsers\r\n    })),\r\n    wIthAuthRedirect\r\n)(UsersAPI);\r\n\r\nexport default UsersContainer;"],"names":["User","id","followUser","unfollowUser","followingInProgress","followed","name","photos","wasOnline","finalCallback","finalTitle","disabledButton","some","className","styles","to","String","src","Button","disabled","title","callback","Paginator","totalCount","currentPage","pageSize","onCurrentPageHandler","portionSize","portion","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","i","push","filter","p","map","pageStyles","toString","Users","users","isFetching","mappedUsers","u","userStatus","location","small","userDefaulAva","length","UsersAPI","this","props","requestUsers","Preloader","page","setCurrentPage","toggleIsFetching","toggleIsFollowingProgress","React","compose","connect","state","usersPage","setUsers","setTotalCount","wIthAuthRedirect"],"sourceRoot":""}